name: Check for new commit on main

on:
  workflow_dispatch:

jobs:
  check-commit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch "main"
        uses: actions/checkout@v3
        with:
          ref: 'main'
          fetch-depth: 0
      - name: Code check for commit and update the branch
        run: |
          set -eux
          if [ -z "$(git status --porcelain)" ]; then 
            echo "Working Directory is clean,will now rebase the code"
            git checkout main
            git pull --rebase
            recent_tag_all=$(git tag --sort=-creatordate)
            commit_number=$(git rev-list --count HEAD)
            max_middle=0
            max_values=()
            for item in $recent_tag_all; do
              middle=$(echo $item | awk -F"-" '{print $2}')
              if [ -z "$middle" ]; then
                echo "Commit number is missing in the provided tag.Tag is not the proper format"
              else
                if [[ $middle == *"."* ]]; then
                  echo "The string contains a dot.Tag is not in the proper format"
                else
                  if [ $middle -gt $max_middle ]; then
                    max_middle=$middle
                    max_values=($item)
                  elif [ $middle -eq $max_middle ]; then
                    max_values+=($item)
                  fi
                fi
              fi
            done
            echo "The values with the maximum middle value ($max_middle) are: ${max_values[@]}"
            last_recent_tag=$(echo "${max_values[@]}" | tr ' ' '\n' | sort -u | tail -n 1)
            echo "The value with the maximum middle value ($max_middle) and the highest suffix is: ${last_recent_tag}"
            if [ -z "$last_recent_tag" ]; then
              echo "Recent Tag is null as the tags may not be in format"
              new_tag=$(date '+%Y%m%d')-"${commit_number}"-0001
            else
              echo "Tag is not null"
              subrelease_no=$(echo $last_recent_tag | awk -F"-" '{print $3}')
                if [ -z "$subrelease_no" ]; then
                  echo "Tag does not have any sub tag number"
                  last_commit_number=$(echo $last_recent_tag | awk -F"-" '{print $2}')
                  if [ -z "$last_commit_number" ]; then
                    echo "Recent tag doesnot have any commit number"
                    new_tag=$(date '+%Y%m%d')-${commit_number}-0001
                  else
                    new_tag=$(date '+%Y%m%d')-"${commit_number}"-0001
                  fi
                else
                  last_commit_number=$(echo $last_recent_tag | awk -F"-" '{print $2}')
                  if [ "$commit_number" -gt "$last_commit_number" ]; then
                     echo "New changes has been found on the branch."
                     new_tag=$(date '+%Y%m%d')-"${commit_number}"-0001
                  else
                    echo "No commit has been commited."
                    new_value=$((subrelease_no+1))
                    new_value_str=$(printf "%04d" "$new_value")
                    echo $new_value_str
                    release_no=$(echo $recent_tag | awk -F"-" '{print $2}')
                    new_tag=$(date '+%Y%m%d')-"${commit_number}"-"${new_value_str}"
                    echo $new_tag
                  fi
                fi
            fi
            echo $new_tag
            git tag $new_tag main
            git push origin $new_tag
            git pull
            echo "| Commit_ID(sha Hash) | Number of commits from last Tag |" >> $GITHUB_STEP_SUMMARY
            echo "| :---: | :---: |" >> $GITHUB_STEP_SUMMARY
            release_note=$(git log ${recent_tag}..${new_tag} --pretty="%H %s" | while read commit_id commit_msg; do echo "| $commit_id | $commit_msg |" >> $GITHUB_STEP_SUMMARY; done)
          else 
             echo "There are uncommited changes available on the branch.Please check and run tag"
             exit 1
          fi
